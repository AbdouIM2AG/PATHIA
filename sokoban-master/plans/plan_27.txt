WARNING: sun.reflect.Reflection.getCallerClass is not supported. This will impact performance.

parsing domain file "domain.pddl" done successfully
parsing problem file "problem_27.pddl" done successfully
# WARNING: Unable to get Instrumentation. Dynamic Attach failed. You may add this JAR as -javaagent manually, or supply -Djdk.attach.allowAttachSelf
# WARNING: Unable to attach Serviceability Agent. You can try again with escalated privileges. Two options: a) use -Djol.tryWithSudo=true to try with sudo; b) echo 0 | sudo tee /proc/sys/kernel/yama/ptrace_scope

problem instantiation done successfully (232 actions, 367 fluents)

* Starting ASTAR search with FAST_FORWARD heuristic 
* ASTAR search succeeded

found plan as follows:

000: (push-down p2_4 p3_4 p4_4) [0]
001: (push-down p3_4 p4_4 p5_4) [0]
002: (push-down p4_4 p5_4 p6_4) [0]
003: (push-right p5_4 p5_5 p5_6) [0]
004: (      move-down p5_5 p6_5) [0]
005: (     move-right p6_5 p6_6) [0]
006: (     move-right p6_6 p6_7) [0]
007: (        move-up p6_7 p5_7) [0]
008: (     move-right p5_7 p5_8) [0]
009: (        move-up p5_8 p4_8) [0]
010: (     move-right p4_8 p4_9) [0]
011: (    move-right p4_9 p4_10) [0]
012: (    move-down p4_10 p5_10) [0]
013: (push-left p5_10 p5_9 p5_8) [0]
014: (      move-down p5_9 p6_9) [0]
015: (      move-down p6_9 p7_9) [0]
016: (      move-down p7_9 p8_9) [0]
017: (      move-left p8_9 p8_8) [0]
018: (      move-down p8_8 p9_8) [0]
019: (     move-down p9_8 p10_8) [0]
020: (    move-left p10_8 p10_7) [0]
021: (    move-left p10_7 p10_6) [0]
022: (    move-left p10_6 p10_5) [0]
023: (    move-left p10_5 p10_4) [0]
024: (    move-left p10_4 p10_3) [0]
025: (    move-left p10_3 p10_2) [0]
026: (       move-up p10_2 p9_2) [0]
027: (        move-up p9_2 p8_2) [0]
028: (        move-up p8_2 p7_2) [0]
029: (     move-right p7_2 p7_3) [0]
030: (     move-right p7_3 p7_4) [0]
031: (  push-up p7_4 p6_4 p5_4) [0]
032: (     move-right p6_4 p6_5) [0]
033: (     move-right p6_5 p6_6) [0]
034: (     move-right p6_6 p6_7) [0]
035: (        move-up p6_7 p5_7) [0]
036: (push-right p5_7 p5_8 p5_9) [0]
037: (        move-up p5_8 p4_8) [0]
038: (     move-right p4_8 p4_9) [0]
039: (push-down p4_9 p5_9 p6_9) [0]
040: (      move-left p5_9 p5_8) [0]
041: (      move-left p5_8 p5_7) [0]
042: (      move-down p5_7 p6_7) [0]
043: (      move-left p6_7 p6_6) [0]
044: (      move-left p6_6 p6_5) [0]
045: (      move-left p6_5 p6_4) [0]
046: (      move-down p6_4 p7_4) [0]
047: (      move-down p7_4 p8_4) [0]
048: (     move-right p8_4 p8_5) [0]
049: (     move-right p8_5 p8_6) [0]
050: (  push-up p8_6 p7_6 p6_6) [0]
051: (      move-down p7_6 p8_6) [0]
052: (      move-left p8_6 p8_5) [0]
053: (      move-left p8_5 p8_4) [0]
054: (        move-up p8_4 p7_4) [0]
055: (        move-up p7_4 p6_4) [0]
056: (     move-right p6_4 p6_5) [0]
057: (push-right p6_5 p6_6 p6_7) [0]
058: (      move-left p6_6 p6_5) [0]
059: (        move-up p6_5 p5_5) [0]
060: (  push-up p5_5 p4_5 p3_5) [0]
061: (      move-left p4_5 p4_4) [0]
062: (        move-up p4_4 p3_4) [0]
063: (        move-up p3_4 p2_4) [0]
064: (     move-right p2_4 p2_5) [0]
065: (push-down p2_5 p3_5 p4_5) [0]
066: (push-down p3_5 p4_5 p5_5) [0]
067: (push-down p4_5 p5_5 p6_5) [0]
068: (push-right p5_5 p5_6 p5_7) [0]
069: (push-right p5_6 p5_7 p5_8) [0]
070: (push-right p5_7 p5_8 p5_9) [0]
071: (        move-up p5_8 p4_8) [0]
072: (     move-right p4_8 p4_9) [0]
073: (    move-right p4_9 p4_10) [0]
074: (    move-down p4_10 p5_10) [0]
075: (push-left p5_10 p5_9 p5_8) [0]
076: (push-left p5_9 p5_8 p5_7) [0]
077: (push-left p5_8 p5_7 p5_6) [0]
078: (push-left p5_7 p5_6 p5_5) [0]
079: (      move-down p5_6 p6_6) [0]
080: (      move-down p6_6 p7_6) [0]
081: (      move-down p7_6 p8_6) [0]
082: (      move-left p8_6 p8_5) [0]
083: (      move-left p8_5 p8_4) [0]
084: (        move-up p8_4 p7_4) [0]
085: (      move-left p7_4 p7_3) [0]
086: (      move-left p7_3 p7_2) [0]
087: (      move-down p7_2 p8_2) [0]
088: (      move-down p8_2 p9_2) [0]
089: (     move-down p9_2 p10_2) [0]
090: (   move-right p10_2 p10_3) [0]
091: (   move-right p10_3 p10_4) [0]
092: (   move-right p10_4 p10_5) [0]
093: (   move-right p10_5 p10_6) [0]
094: (   move-right p10_6 p10_7) [0]
095: (   move-right p10_7 p10_8) [0]
096: (       move-up p10_8 p9_8) [0]
097: (        move-up p9_8 p8_8) [0]
098: (     move-right p8_8 p8_9) [0]
099: (        move-up p8_9 p7_9) [0]
100: (  push-up p7_9 p6_9 p5_9) [0]
101: (      move-down p6_9 p7_9) [0]
102: (      move-down p7_9 p8_9) [0]
103: (      move-left p8_9 p8_8) [0]
104: (      move-down p8_8 p9_8) [0]
105: (     move-down p9_8 p10_8) [0]
106: (    move-left p10_8 p10_7) [0]
107: (    move-left p10_7 p10_6) [0]
108: (    move-left p10_6 p10_5) [0]
109: (    move-left p10_5 p10_4) [0]
110: (    move-left p10_4 p10_3) [0]
111: (    move-left p10_3 p10_2) [0]
112: (       move-up p10_2 p9_2) [0]
113: (        move-up p9_2 p8_2) [0]
114: (        move-up p8_2 p7_2) [0]
115: (     move-right p7_2 p7_3) [0]
116: (     move-right p7_3 p7_4) [0]
117: (        move-up p7_4 p6_4) [0]
118: (  push-up p6_4 p5_4 p4_4) [0]
119: (  push-up p5_4 p4_4 p3_4) [0]
120: (      move-down p4_4 p5_4) [0]
121: (      move-down p5_4 p6_4) [0]
122: (      move-down p6_4 p7_4) [0]
123: (      move-down p7_4 p8_4) [0]
124: (     move-right p8_4 p8_5) [0]
125: (     move-right p8_5 p8_6) [0]
126: (        move-up p8_6 p7_6) [0]
127: (        move-up p7_6 p6_6) [0]
128: (        move-up p6_6 p5_6) [0]
129: (push-left p5_6 p5_5 p5_4) [0]
130: (        move-up p5_5 p4_5) [0]
131: (      move-left p4_5 p4_4) [0]
132: (push-down p4_4 p5_4 p6_4) [0]
133: (push-down p5_4 p6_4 p7_4) [0]
134: (        move-up p6_4 p5_4) [0]
135: (     move-right p5_4 p5_5) [0]
136: (        move-up p5_5 p4_5) [0]
137: (        move-up p4_5 p3_5) [0]
138: (        move-up p3_5 p2_5) [0]
139: (      move-left p2_5 p2_4) [0]
140: (push-down p2_4 p3_4 p4_4) [0]
141: (     move-right p3_4 p3_5) [0]
142: (      move-down p3_5 p4_5) [0]
143: (      move-down p4_5 p5_5) [0]
144: (     move-right p5_5 p5_6) [0]
145: (     move-right p5_6 p5_7) [0]
146: (     move-right p5_7 p5_8) [0]
147: (        move-up p5_8 p4_8) [0]
148: (     move-right p4_8 p4_9) [0]
149: (    move-right p4_9 p4_10) [0]
150: (    move-down p4_10 p5_10) [0]
151: (push-left p5_10 p5_9 p5_8) [0]
152: (push-left p5_9 p5_8 p5_7) [0]
153: (push-left p5_8 p5_7 p5_6) [0]
154: (push-left p5_7 p5_6 p5_5) [0]
155: (      move-down p5_6 p6_6) [0]
156: (push-left p6_6 p6_5 p6_4) [0]
157: (  push-up p6_5 p5_5 p4_5) [0]
158: (  push-up p5_5 p4_5 p3_5) [0]

time spent:       0,04 seconds parsing 
                  0,31 seconds encoding 
                 11,79 seconds searching
                 12,15 seconds total time

memory used:      1,28 MBytes for problem representation
                 41,79 MBytes for searching
                 43,07 MBytes total


