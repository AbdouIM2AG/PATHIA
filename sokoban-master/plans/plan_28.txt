WARNING: sun.reflect.Reflection.getCallerClass is not supported. This will impact performance.

parsing domain file "domain.pddl" done successfully
parsing problem file "problem_28.pddl" done successfully
# WARNING: Unable to get Instrumentation. Dynamic Attach failed. You may add this JAR as -javaagent manually, or supply -Djdk.attach.allowAttachSelf
# WARNING: Unable to attach Serviceability Agent. You can try again with escalated privileges. Two options: a) use -Djol.tryWithSudo=true to try with sudo; b) echo 0 | sudo tee /proc/sys/kernel/yama/ptrace_scope

problem instantiation done successfully (149 actions, 236 fluents)

* Starting ASTAR search with FAST_FORWARD heuristic 
* ASTAR search succeeded

found plan as follows:

000: (  push-up p6_7 p5_7 p4_7) [0]
001: (push-left p5_7 p5_6 p5_5) [0]
002: (push-down p5_6 p6_6 p7_6) [0]
003: (push-left p6_6 p6_5 p6_4) [0]
004: (      move-down p6_5 p7_5) [0]
005: (      move-down p7_5 p8_5) [0]
006: (     move-right p8_5 p8_6) [0]
007: (  push-up p8_6 p7_6 p6_6) [0]
008: (  push-up p7_6 p6_6 p5_6) [0]
009: (     move-right p6_6 p6_7) [0]
010: (        move-up p6_7 p5_7) [0]
011: (     move-right p5_7 p5_8) [0]
012: (        move-up p5_8 p4_8) [0]
013: (        move-up p4_8 p3_8) [0]
014: (      move-left p3_8 p3_7) [0]
015: (push-down p3_7 p4_7 p5_7) [0]
016: (      move-left p4_7 p4_6) [0]
017: (      move-left p4_6 p4_5) [0]
018: (push-down p4_5 p5_5 p6_5) [0]
019: (      move-left p5_5 p5_4) [0]
020: (      move-left p5_4 p5_3) [0]
021: (push-down p5_3 p6_3 p7_3) [0]
022: (      move-left p6_3 p6_2) [0]
023: (      move-down p6_2 p7_2) [0]
024: (      move-down p7_2 p8_2) [0]
025: (     move-right p8_2 p8_3) [0]
026: (  push-up p8_3 p7_3 p6_3) [0]
027: (  push-up p7_3 p6_3 p5_3) [0]
028: (  push-up p6_3 p5_3 p4_3) [0]
029: (     move-right p5_3 p5_4) [0]
030: (     move-right p5_4 p5_5) [0]
031: (push-down p5_5 p6_5 p7_5) [0]
032: (     move-right p6_5 p6_6) [0]
033: (  push-up p6_6 p5_6 p4_6) [0]
034: (      move-down p5_6 p6_6) [0]
035: (      move-down p6_6 p7_6) [0]
036: (      move-down p7_6 p8_6) [0]
037: (      move-left p8_6 p8_5) [0]
038: (  push-up p8_5 p7_5 p6_5) [0]
039: (  push-up p7_5 p6_5 p5_5) [0]
040: (push-left p6_5 p6_4 p6_3) [0]
041: (        move-up p6_4 p5_4) [0]
042: (      move-left p5_4 p5_3) [0]
043: (push-down p5_3 p6_3 p7_3) [0]
044: (      move-left p6_3 p6_2) [0]
045: (      move-down p6_2 p7_2) [0]
046: (      move-down p7_2 p8_2) [0]
047: (     move-right p8_2 p8_3) [0]
048: (  push-up p8_3 p7_3 p6_3) [0]
049: (      move-left p7_3 p7_2) [0]
050: (        move-up p7_2 p6_2) [0]
051: (push-right p6_2 p6_3 p6_4) [0]
052: (        move-up p6_3 p5_3) [0]
053: (  push-up p5_3 p4_3 p3_3) [0]
054: (      move-left p4_3 p4_2) [0]
055: (        move-up p4_2 p3_2) [0]
056: (        move-up p3_2 p2_2) [0]
057: (     move-right p2_2 p2_3) [0]
058: (push-down p2_3 p3_3 p4_3) [0]
059: (push-down p3_3 p4_3 p5_3) [0]
060: (push-down p4_3 p5_3 p6_3) [0]
061: (push-down p5_3 p6_3 p7_3) [0]
062: (push-right p6_3 p6_4 p6_5) [0]
063: (        move-up p6_4 p5_4) [0]
064: (push-right p5_4 p5_5 p5_6) [0]
065: (push-down p5_5 p6_5 p7_5) [0]
066: (     move-right p6_5 p6_6) [0]
067: (     move-right p6_6 p6_7) [0]
068: (  push-up p6_7 p5_7 p4_7) [0]
069: (push-left p5_7 p5_6 p5_5) [0]
070: (push-left p5_6 p5_5 p5_4) [0]
071: (      move-down p5_5 p6_5) [0]
072: (      move-left p6_5 p6_4) [0]
073: (      move-left p6_4 p6_3) [0]
074: (      move-left p6_3 p6_2) [0]
075: (      move-down p6_2 p7_2) [0]
076: (      move-down p7_2 p8_2) [0]
077: (     move-right p8_2 p8_3) [0]
078: (  push-up p8_3 p7_3 p6_3) [0]
079: (      move-left p7_3 p7_2) [0]
080: (        move-up p7_2 p6_2) [0]
081: (push-right p6_2 p6_3 p6_4) [0]
082: (push-right p6_3 p6_4 p6_5) [0]
083: (push-right p6_4 p6_5 p6_6) [0]
084: (        move-up p6_5 p5_5) [0]
085: (     move-right p5_5 p5_6) [0]
086: (push-down p5_6 p6_6 p7_6) [0]
087: (        move-up p6_6 p5_6) [0]
088: (     move-right p5_6 p5_7) [0]
089: (     move-right p5_7 p5_8) [0]
090: (        move-up p5_8 p4_8) [0]
091: (        move-up p4_8 p3_8) [0]
092: (      move-left p3_8 p3_7) [0]
093: (push-down p3_7 p4_7 p5_7) [0]
094: (     move-right p4_7 p4_8) [0]
095: (      move-down p4_8 p5_8) [0]
096: (push-left p5_8 p5_7 p5_6) [0]
097: (      move-down p5_7 p6_7) [0]
098: (      move-left p6_7 p6_6) [0]
099: (      move-left p6_6 p6_5) [0]
100: (        move-up p6_5 p5_5) [0]
101: (        move-up p5_5 p4_5) [0]
102: (push-right p4_5 p4_6 p4_7) [0]
103: (      move-left p4_6 p4_5) [0]
104: (      move-down p4_5 p5_5) [0]
105: (      move-down p5_5 p6_5) [0]
106: (      move-left p6_5 p6_4) [0]
107: (      move-left p6_4 p6_3) [0]
108: (        move-up p6_3 p5_3) [0]
109: (push-right p5_3 p5_4 p5_5) [0]
110: (      move-down p5_4 p6_4) [0]
111: (     move-right p6_4 p6_5) [0]
112: (     move-right p6_5 p6_6) [0]
113: (     move-right p6_6 p6_7) [0]
114: (        move-up p6_7 p5_7) [0]
115: (     move-right p5_7 p5_8) [0]
116: (        move-up p5_8 p4_8) [0]
117: (        move-up p4_8 p3_8) [0]
118: (      move-left p3_8 p3_7) [0]
119: (push-down p3_7 p4_7 p5_7) [0]

time spent:       0,04 seconds parsing 
                  0,19 seconds encoding 
                  4,86 seconds searching
                  5,09 seconds total time

memory used:      0,83 MBytes for problem representation
                 20,79 MBytes for searching
                 21,62 MBytes total


