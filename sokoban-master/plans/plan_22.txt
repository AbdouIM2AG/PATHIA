WARNING: sun.reflect.Reflection.getCallerClass is not supported. This will impact performance.

parsing domain file "domain.pddl" done successfully
parsing problem file "problem_22.pddl" done successfully
# WARNING: Unable to get Instrumentation. Dynamic Attach failed. You may add this JAR as -javaagent manually, or supply -Djdk.attach.allowAttachSelf
# WARNING: Unable to attach Serviceability Agent. You can try again with escalated privileges. Two options: a) use -Djol.tryWithSudo=true to try with sudo; b) echo 0 | sudo tee /proc/sys/kernel/yama/ptrace_scope

problem instantiation done successfully (133 actions, 214 fluents)

* Starting ASTAR search with FAST_FORWARD heuristic 
* ASTAR search succeeded

found plan as follows:

000: (push-down p4_6 p5_6 p6_6) [0]
001: (     move-right p5_6 p5_7) [0]
002: (      move-down p5_7 p6_7) [0]
003: (      move-down p6_7 p7_7) [0]
004: (      move-left p7_7 p7_6) [0]
005: (      move-left p7_6 p7_5) [0]
006: (push-left p7_5 p7_4 p7_3) [0]
007: (  push-up p7_4 p6_4 p5_4) [0]
008: (  push-up p6_4 p5_4 p4_4) [0]
009: (  push-up p5_4 p4_4 p3_4) [0]
010: (     move-right p4_4 p4_5) [0]
011: (     move-right p4_5 p4_6) [0]
012: (      move-down p4_6 p5_6) [0]
013: (push-down p5_6 p6_6 p7_6) [0]
014: (        move-up p6_6 p5_6) [0]
015: (        move-up p5_6 p4_6) [0]
016: (      move-left p4_6 p4_5) [0]
017: (      move-left p4_5 p4_4) [0]
018: (      move-down p4_4 p5_4) [0]
019: (      move-down p5_4 p6_4) [0]
020: (push-right p6_4 p6_5 p6_6) [0]
021: (      move-left p6_5 p6_4) [0]
022: (        move-up p6_4 p5_4) [0]
023: (        move-up p5_4 p4_4) [0]
024: (     move-right p4_4 p4_5) [0]
025: (        move-up p4_5 p3_5) [0]
026: (        move-up p3_5 p2_5) [0]
027: (      move-left p2_5 p2_4) [0]
028: (push-down p2_4 p3_4 p4_4) [0]
029: (push-down p3_4 p4_4 p5_4) [0]
030: (push-down p4_4 p5_4 p6_4) [0]
031: (        move-up p5_4 p4_4) [0]
032: (        move-up p4_4 p3_4) [0]
033: (      move-left p3_4 p3_3) [0]
034: (      move-left p3_3 p3_2) [0]
035: (      move-down p3_2 p4_2) [0]
036: (      move-down p4_2 p5_2) [0]
037: (push-right p5_2 p5_3 p5_4) [0]
038: (      move-down p5_3 p6_3) [0]
039: (push-right p6_3 p6_4 p6_5) [0]
040: (  push-up p6_4 p5_4 p4_4) [0]
041: (  push-up p5_4 p4_4 p3_4) [0]
042: (      move-down p4_4 p5_4) [0]
043: (      move-left p5_4 p5_3) [0]
044: (      move-left p5_3 p5_2) [0]
045: (        move-up p5_2 p4_2) [0]
046: (        move-up p4_2 p3_2) [0]
047: (     move-right p3_2 p3_3) [0]
048: (push-right p3_3 p3_4 p3_5) [0]
049: (      move-down p3_4 p4_4) [0]
050: (      move-down p4_4 p5_4) [0]
051: (      move-down p5_4 p6_4) [0]
052: (      move-down p6_4 p7_4) [0]
053: (      move-down p7_4 p8_4) [0]
054: (      move-left p8_4 p8_3) [0]
055: (  push-up p8_3 p7_3 p6_3) [0]
056: (  push-up p7_3 p6_3 p5_3) [0]
057: (     move-right p6_3 p6_4) [0]
058: (        move-up p6_4 p5_4) [0]
059: (        move-up p5_4 p4_4) [0]
060: (     move-right p4_4 p4_5) [0]
061: (     move-right p4_5 p4_6) [0]
062: (      move-down p4_6 p5_6) [0]
063: (     move-right p5_6 p5_7) [0]
064: (      move-down p5_7 p6_7) [0]
065: (      move-down p6_7 p7_7) [0]
066: (push-left p7_7 p7_6 p7_5) [0]
067: (push-left p7_6 p7_5 p7_4) [0]
068: (     move-right p7_5 p7_6) [0]
069: (     move-right p7_6 p7_7) [0]
070: (        move-up p7_7 p6_7) [0]
071: (        move-up p6_7 p5_7) [0]
072: (      move-left p5_7 p5_6) [0]
073: (        move-up p5_6 p4_6) [0]
074: (      move-left p4_6 p4_5) [0]
075: (      move-left p4_5 p4_4) [0]
076: (        move-up p4_4 p3_4) [0]
077: (        move-up p3_4 p2_4) [0]
078: (     move-right p2_4 p2_5) [0]
079: (push-down p2_5 p3_5 p4_5) [0]
080: (      move-left p3_5 p3_4) [0]
081: (      move-left p3_4 p3_3) [0]
082: (      move-left p3_3 p3_2) [0]
083: (      move-down p3_2 p4_2) [0]
084: (      move-down p4_2 p5_2) [0]
085: (push-right p5_2 p5_3 p5_4) [0]
086: (      move-down p5_3 p6_3) [0]
087: (     move-right p6_3 p6_4) [0]
088: (  push-up p6_4 p5_4 p4_4) [0]
089: (  push-up p5_4 p4_4 p3_4) [0]
090: (      move-down p4_4 p5_4) [0]
091: (      move-left p5_4 p5_3) [0]
092: (      move-down p5_3 p6_3) [0]
093: (      move-down p6_3 p7_3) [0]
094: (      move-down p7_3 p8_3) [0]
095: (     move-right p8_3 p8_4) [0]
096: (  push-up p8_4 p7_4 p6_4) [0]
097: (     move-right p7_4 p7_5) [0]
098: (     move-right p7_5 p7_6) [0]
099: (     move-right p7_6 p7_7) [0]
100: (        move-up p7_7 p6_7) [0]
101: (        move-up p6_7 p5_7) [0]
102: (      move-left p5_7 p5_6) [0]
103: (        move-up p5_6 p4_6) [0]
104: (push-left p4_6 p4_5 p4_4) [0]
105: (        move-up p4_5 p3_5) [0]
106: (push-left p3_5 p3_4 p3_3) [0]
107: (push-down p3_4 p4_4 p5_4) [0]
108: (     move-right p4_4 p4_5) [0]
109: (     move-right p4_5 p4_6) [0]
110: (      move-down p4_6 p5_6) [0]
111: (     move-right p5_6 p5_7) [0]
112: (      move-down p5_7 p6_7) [0]
113: (      move-down p6_7 p7_7) [0]
114: (      move-left p7_7 p7_6) [0]
115: (      move-left p7_6 p7_5) [0]
116: (      move-left p7_5 p7_4) [0]
117: (      move-left p7_4 p7_3) [0]
118: (        move-up p7_3 p6_3) [0]
119: (        move-up p6_3 p5_3) [0]
120: (      move-left p5_3 p5_2) [0]
121: (        move-up p5_2 p4_2) [0]
122: (        move-up p4_2 p3_2) [0]
123: (push-right p3_2 p3_3 p3_4) [0]
124: (      move-left p3_3 p3_2) [0]
125: (      move-down p3_2 p4_2) [0]
126: (      move-down p4_2 p5_2) [0]
127: (     move-right p5_2 p5_3) [0]
128: (      move-down p5_3 p6_3) [0]
129: (      move-down p6_3 p7_3) [0]
130: (     move-right p7_3 p7_4) [0]
131: (     move-right p7_4 p7_5) [0]
132: (     move-right p7_5 p7_6) [0]
133: (     move-right p7_6 p7_7) [0]
134: (        move-up p7_7 p6_7) [0]
135: (        move-up p6_7 p5_7) [0]
136: (      move-left p5_7 p5_6) [0]
137: (push-down p5_6 p6_6 p7_6) [0]
138: (     move-right p6_6 p6_7) [0]
139: (      move-down p6_7 p7_7) [0]
140: (push-left p7_7 p7_6 p7_5) [0]
141: (push-left p7_6 p7_5 p7_4) [0]
142: (push-left p7_5 p7_4 p7_3) [0]
143: (      move-down p7_4 p8_4) [0]
144: (      move-left p8_4 p8_3) [0]
145: (  push-up p8_3 p7_3 p6_3) [0]

time spent:       0,04 seconds parsing 
                  0,18 seconds encoding 
                  4,73 seconds searching
                  4,95 seconds total time

memory used:      0,75 MBytes for problem representation
                 20,60 MBytes for searching
                 21,36 MBytes total


